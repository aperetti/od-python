# coding: utf-8

"""
    OpenDota API

    # Introduction The OpenDota API provides Dota 2 related data including advanced match data extracted from match replays.  You can find data that can be used to convert hero and ability IDs and other information provided by the API from the [dotaconstants](https://github.com/odota/dotaconstants) repository.  **Beginning 2018-04-22, the OpenDota API is limited to 50,000 free calls per month and 60 requests/minute** We offer a Premium Tier with unlimited API calls and higher rate limits. Check out the [API page](https://www.opendota.com/api-keys) to learn more. 

    OpenAPI spec version: 18.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class InlineResponse2006(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, match_id=None, duration=None, start_time=None, radiant_team_id=None, radiant_name=None, dire_team_id=None, dire_name=None, leagueid=None, league_name=None, series_id=None, series_type=None, radiant_score=None, dire_score=None, radiant_win=None, radiant=None):
        """
        InlineResponse2006 - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'match_id': 'int',
            'duration': 'int',
            'start_time': 'int',
            'radiant_team_id': 'int',
            'radiant_name': 'str',
            'dire_team_id': 'int',
            'dire_name': 'str',
            'leagueid': 'int',
            'league_name': 'str',
            'series_id': 'int',
            'series_type': 'int',
            'radiant_score': 'int',
            'dire_score': 'int',
            'radiant_win': 'bool',
            'radiant': 'bool'
        }

        self.attribute_map = {
            'match_id': 'match_id',
            'duration': 'duration',
            'start_time': 'start_time',
            'radiant_team_id': 'radiant_team_id',
            'radiant_name': 'radiant_name',
            'dire_team_id': 'dire_team_id',
            'dire_name': 'dire_name',
            'leagueid': 'leagueid',
            'league_name': 'league_name',
            'series_id': 'series_id',
            'series_type': 'series_type',
            'radiant_score': 'radiant_score',
            'dire_score': 'dire_score',
            'radiant_win': 'radiant_win',
            'radiant': 'radiant'
        }

        self._match_id = match_id
        self._duration = duration
        self._start_time = start_time
        self._radiant_team_id = radiant_team_id
        self._radiant_name = radiant_name
        self._dire_team_id = dire_team_id
        self._dire_name = dire_name
        self._leagueid = leagueid
        self._league_name = league_name
        self._series_id = series_id
        self._series_type = series_type
        self._radiant_score = radiant_score
        self._dire_score = dire_score
        self._radiant_win = radiant_win
        self._radiant = radiant

    @property
    def match_id(self):
        """
        Gets the match_id of this InlineResponse2006.
        Used to identify individual matches, e.g. 3703866531

        :return: The match_id of this InlineResponse2006.
        :rtype: int
        """
        return self._match_id

    @match_id.setter
    def match_id(self, match_id):
        """
        Sets the match_id of this InlineResponse2006.
        Used to identify individual matches, e.g. 3703866531

        :param match_id: The match_id of this InlineResponse2006.
        :type: int
        """

        self._match_id = match_id

    @property
    def duration(self):
        """
        Gets the duration of this InlineResponse2006.
        Length of the match

        :return: The duration of this InlineResponse2006.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """
        Sets the duration of this InlineResponse2006.
        Length of the match

        :param duration: The duration of this InlineResponse2006.
        :type: int
        """

        self._duration = duration

    @property
    def start_time(self):
        """
        Gets the start_time of this InlineResponse2006.
        Unix timestamp of when the match began

        :return: The start_time of this InlineResponse2006.
        :rtype: int
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """
        Sets the start_time of this InlineResponse2006.
        Unix timestamp of when the match began

        :param start_time: The start_time of this InlineResponse2006.
        :type: int
        """

        self._start_time = start_time

    @property
    def radiant_team_id(self):
        """
        Gets the radiant_team_id of this InlineResponse2006.
        The Radiant's team_id

        :return: The radiant_team_id of this InlineResponse2006.
        :rtype: int
        """
        return self._radiant_team_id

    @radiant_team_id.setter
    def radiant_team_id(self, radiant_team_id):
        """
        Sets the radiant_team_id of this InlineResponse2006.
        The Radiant's team_id

        :param radiant_team_id: The radiant_team_id of this InlineResponse2006.
        :type: int
        """

        self._radiant_team_id = radiant_team_id

    @property
    def radiant_name(self):
        """
        Gets the radiant_name of this InlineResponse2006.
        The Radiant's team name

        :return: The radiant_name of this InlineResponse2006.
        :rtype: str
        """
        return self._radiant_name

    @radiant_name.setter
    def radiant_name(self, radiant_name):
        """
        Sets the radiant_name of this InlineResponse2006.
        The Radiant's team name

        :param radiant_name: The radiant_name of this InlineResponse2006.
        :type: str
        """

        self._radiant_name = radiant_name

    @property
    def dire_team_id(self):
        """
        Gets the dire_team_id of this InlineResponse2006.
        The Dire's team_id

        :return: The dire_team_id of this InlineResponse2006.
        :rtype: int
        """
        return self._dire_team_id

    @dire_team_id.setter
    def dire_team_id(self, dire_team_id):
        """
        Sets the dire_team_id of this InlineResponse2006.
        The Dire's team_id

        :param dire_team_id: The dire_team_id of this InlineResponse2006.
        :type: int
        """

        self._dire_team_id = dire_team_id

    @property
    def dire_name(self):
        """
        Gets the dire_name of this InlineResponse2006.
        The Dire's team name

        :return: The dire_name of this InlineResponse2006.
        :rtype: str
        """
        return self._dire_name

    @dire_name.setter
    def dire_name(self, dire_name):
        """
        Sets the dire_name of this InlineResponse2006.
        The Dire's team name

        :param dire_name: The dire_name of this InlineResponse2006.
        :type: str
        """

        self._dire_name = dire_name

    @property
    def leagueid(self):
        """
        Gets the leagueid of this InlineResponse2006.
        Identifier for the league the match took place in

        :return: The leagueid of this InlineResponse2006.
        :rtype: int
        """
        return self._leagueid

    @leagueid.setter
    def leagueid(self, leagueid):
        """
        Sets the leagueid of this InlineResponse2006.
        Identifier for the league the match took place in

        :param leagueid: The leagueid of this InlineResponse2006.
        :type: int
        """

        self._leagueid = leagueid

    @property
    def league_name(self):
        """
        Gets the league_name of this InlineResponse2006.
        Name of league the match took place in

        :return: The league_name of this InlineResponse2006.
        :rtype: str
        """
        return self._league_name

    @league_name.setter
    def league_name(self, league_name):
        """
        Sets the league_name of this InlineResponse2006.
        Name of league the match took place in

        :param league_name: The league_name of this InlineResponse2006.
        :type: str
        """

        self._league_name = league_name

    @property
    def series_id(self):
        """
        Gets the series_id of this InlineResponse2006.
        Identifier for the series of the match

        :return: The series_id of this InlineResponse2006.
        :rtype: int
        """
        return self._series_id

    @series_id.setter
    def series_id(self, series_id):
        """
        Sets the series_id of this InlineResponse2006.
        Identifier for the series of the match

        :param series_id: The series_id of this InlineResponse2006.
        :type: int
        """

        self._series_id = series_id

    @property
    def series_type(self):
        """
        Gets the series_type of this InlineResponse2006.
        Type of series the match was

        :return: The series_type of this InlineResponse2006.
        :rtype: int
        """
        return self._series_type

    @series_type.setter
    def series_type(self, series_type):
        """
        Sets the series_type of this InlineResponse2006.
        Type of series the match was

        :param series_type: The series_type of this InlineResponse2006.
        :type: int
        """

        self._series_type = series_type

    @property
    def radiant_score(self):
        """
        Gets the radiant_score of this InlineResponse2006.
        Number of kills the Radiant team had when the match ended

        :return: The radiant_score of this InlineResponse2006.
        :rtype: int
        """
        return self._radiant_score

    @radiant_score.setter
    def radiant_score(self, radiant_score):
        """
        Sets the radiant_score of this InlineResponse2006.
        Number of kills the Radiant team had when the match ended

        :param radiant_score: The radiant_score of this InlineResponse2006.
        :type: int
        """

        self._radiant_score = radiant_score

    @property
    def dire_score(self):
        """
        Gets the dire_score of this InlineResponse2006.
        Number of kills the Dire team had when the match ended

        :return: The dire_score of this InlineResponse2006.
        :rtype: int
        """
        return self._dire_score

    @dire_score.setter
    def dire_score(self, dire_score):
        """
        Sets the dire_score of this InlineResponse2006.
        Number of kills the Dire team had when the match ended

        :param dire_score: The dire_score of this InlineResponse2006.
        :type: int
        """

        self._dire_score = dire_score

    @property
    def radiant_win(self):
        """
        Gets the radiant_win of this InlineResponse2006.
        Whether or not the Radiant won the match

        :return: The radiant_win of this InlineResponse2006.
        :rtype: bool
        """
        return self._radiant_win

    @radiant_win.setter
    def radiant_win(self, radiant_win):
        """
        Sets the radiant_win of this InlineResponse2006.
        Whether or not the Radiant won the match

        :param radiant_win: The radiant_win of this InlineResponse2006.
        :type: bool
        """

        self._radiant_win = radiant_win

    @property
    def radiant(self):
        """
        Gets the radiant of this InlineResponse2006.
        Whether the team/player/hero was on Radiant

        :return: The radiant of this InlineResponse2006.
        :rtype: bool
        """
        return self._radiant

    @radiant.setter
    def radiant(self, radiant):
        """
        Sets the radiant of this InlineResponse2006.
        Whether the team/player/hero was on Radiant

        :param radiant: The radiant of this InlineResponse2006.
        :type: bool
        """

        self._radiant = radiant

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
